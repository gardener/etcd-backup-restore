#!/usr/bin/env bash
# SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0
set -e

# For the check step concourse will set the following environment variables:
# SOURCE_PATH - path to component repository root directory.
if [[ $(uname) == 'Darwin' ]]; then
  READLINK_BIN="greadlink"
else
  READLINK_BIN="readlink"
fi

if [[ -z "${SOURCE_PATH}" ]]; then
  export SOURCE_PATH="$(${READLINK_BIN} -f "$(dirname ${0})/..")"
else
  export SOURCE_PATH="$(${READLINK_BIN} -f ${SOURCE_PATH})"
fi

VCS="github.com"
ORGANIZATION="gardener"
PROJECT="etcd-backup-restore"
REPOSITORY=${VCS}/${ORGANIZATION}/${PROJECT}
cd "${SOURCE_PATH}"

# Install Golint (linting tool).
GO111MODULE=off go get -u golang.org/x/lint/golint

# Install Helm from binary.
curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
chmod 700 get_helm.sh
if [ $(id -u) = 0 ]; then
   ./get_helm.sh --no-sudo
fi
./get_helm.sh 
rm get_helm.sh

###############################################################################

PACKAGES="$(GO111MODULE=on go list -mod=vendor -e ./...)"
LINT_FOLDERS="$(echo ${PACKAGES} | sed "s|github.com/gardener/etcd-backup-restore|.|g")"
HELM_CHART_PATH="${SOURCE_PATH}/chart/etcd-backup-restore"

# Execute static code checks.
GO111MODULE=on go vet -mod vendor ${PACKAGES}

# Execute automatic code formatting directive.
go fmt ${PACKAGES}

# Execute lint checks.
golint -set_exit_status ${LINT_FOLDERS}

# Execute lint checks on helm chart.
helm lint "${HELM_CHART_PATH}"
